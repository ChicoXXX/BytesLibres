El objetivo de este articulo es mostrar como trabajar con GitHub y por lógica, Git.

Pero antes, un poco de teoría:


GitHub [1] es una forja para alojar proyectos utilizando el sistema de control de versiones Git. Utiliza el framework Ruby on Rails por GitHub, Inc. (anteriormente conocida como Logical Awesome).

El código se almacena de forma pública, sin costo; aunque también se puede hacer de forma privada, creando de esta manera una cuenta de pago.

Git [2] es un software de control de versiones diseñado por Linus Torvalds, pensando en la eficiencia y la confiabilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente. Al principio, Git se pensó como un motor de bajo nivel sobre el cual otros pudieran escribir la interfaz de usuario o front end como Cogito o StGIT. Sin embargo, Git se ha convertido desde entonces en un sistema de control de versiones con funcionalidad plena. Hay algunos proyectos de mucha relevancia que ya usan Git, en particular, el grupo de programación del núcleo Linux.

El mantenimiento del software Git está supervisado por Junio Hamano desde 2009, quien recibe contribuciones al código de alrededor de 280 programadores.

Ahora, manos al teclado :)

Empezare por decir que estare trabajando con Debian Squeeze, pero puedes usar la distribución que te agrade (recuerda: Libertad ;) ) solo vas a tener que ejecutar los comando equivalentes.

Empezaremos por instalar git en nuetro equipo con el comando:

$sudo apt-get install git

$git config --global user.name TU-NOMBRE
$git config --global user.email TU-EMAIL

git rm 2013/04-abril/"Mis primeros pasos con Git y GitHub"

$  git push origin master
Username: 
Password: 

Counting objects: 7, done.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 511 bytes, done.
Total 5 (delta 0), reused 0 (delta 0)
To https://github.com/ChicoXXX/BytesLibres.git
   bc0bcde..1acb757  master -> master
$








Trabajando con GitHub

Para trabajar en un proyecto que se encuentre en los servidores de GitHub 
tu puedes hacer un fork del proyecto en github.com, 
clonar tu fork localmente, hacer cambios, enviar cambios, etcetera.


Obtener un proyecto de GitHub
$ git clone https://github.com/ChicoXXX/BytesLibres
$ cd BytesLibres
$ (editar los archivos)
$ git add .
$ git commit -m 'Explicando el cambio'
$ git push origin master

ir a github y presionar el botón ‘pull request’










[1] https://es.wikipedia.org/wiki/GitHub
[2] https://es.wikipedia.org/wiki/Git
[3] https://help.github.com/articles/set-up-git



